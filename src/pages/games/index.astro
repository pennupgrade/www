---
import GameTag from "@/components/game-tag.astro";
import ParsedGameTags from "@/components/parsed-game-tags.astro";
import Footer from "@/layouts/footer.astro";
import Header from "@/layouts/header.astro";
import HtmlLayout from "@/layouts/html-layout.astro";
import { Image } from "astro:assets";

import { getCollection } from "astro:content";

const games = await getCollection("games");
games.sort((a, b) => b.data.released.getTime() - a.data.released.getTime());
---

<HtmlLayout
  description="Here we share the games published by the club and by members of our community. Go explore and play them!"
  title="Our games"
>
  <Header />

  <main class="mx-auto mb-24 max-w-content space-y-8 px-4 pt-32 sm:pt-28">
    <section class="space-y-8">
      <h2 class="text-30 font-medium leading-none sm:text-48">Our projects!</h2>

      <details class="space-y-4 rounded-2xl border-2 border-up-11">
        <summary class="cursor-pointer p-4 italic text-up-2"
          >What do the colorful tags mean?</summary
        >

        <ul
          class="grid grid-cols-1 gap-x-4 gap-y-6 px-4 pb-4 xs:grid-cols-2 sm:grid-cols-3 sm:gap-x-8"
        >
          <li class="space-y-2.5">
            <GameTag type="club" />
            <p>
              <span class="font-bold">Club games.</span> These are our annual, all-hands-on-deck special
              projects that showcase what we've learned and represent our collective efforts that year.
            </p>
          </li>

          <li class="space-y-2.5">
            <GameTag type="student" />
            <p>
              <span class="font-bold">Student games.</span> Made by Penn students in the UPGRADE community,
              developed during our meetings. We're proud of 'em and wanna spotlight them here!
            </p>
          </li>

          <li class="space-y-2.5">
            <GameTag type="gamejam" />
            <p>
              <span class="font-bold">Games created during one of our game jams.</span> They may look
              rough on the edges, but that's because they were made in less than 24 hours!
            </p>
          </li>

          <li class="space-y-2.5">
            <GameTag type="itch.io" />
            <p>
              <span class="font-bold">Published on itch.io.</span> These games can usually be directly
              played from your browser, and may also offer direct downloads for your system.
            </p>
          </li>

          <li class="space-y-2.5">
            <GameTag type="steam" />
            <p>
              <span class="font-bold">Published on Steam.</span> This is not a straightforward process
              for us (nor is it free) so such games are very few and far between (and very very special).
            </p>
          </li>
        </ul>
      </details>
    </section>

    <section class="grid grid-cols-1 gap-4 sm:grid-cols-2">
      {
        games.map((gameEntry) => {
          const { name, images, game, released, credits } = gameEntry.data;

          let creditsList = "UPGRADE";
          if (game.type === "student") {
            creditsList = credits
              .map((maybeName) => {
                if (typeof maybeName === "string") return maybeName;
                return maybeName.names.join(", ");
              })
              .join(", ");
          }

          return (
            <a href={`/games/${gameEntry.slug}`} class="group">
              <h3 class="rounded-t-2xl bg-up-10 p-4 text-30 font-medium leading-none group-hover:bg-up-9">
                {name} ({released.toLocaleDateString("en-US", { year: "numeric" })})
              </h3>

              <Image
                src={images[0].file}
                alt={images[0].alt}
                class="h-48 w-full object-cover opacity-95 group-hover:opacity-100 sm:h-60"
              />

              <div class="space-y-3 rounded-b-2xl bg-up-10 p-4 group-hover:bg-up-9">
                <ul class="flex flex-wrap gap-2.5">
                  <ParsedGameTags gameToParse={gameEntry} />
                </ul>

                <p>By {creditsList}</p>
              </div>
            </a>
          );
        })
      }
    </section>
  </main>

  <Footer />
</HtmlLayout>
