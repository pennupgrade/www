---
import Footer from "@/components/layout/footer.astro";
import Header from "@/components/layout/header.astro";
import HtmlLayout from "@/layouts/html-layout.astro";
import { getCollection } from "astro:content";
import { Archive, CalendarFold, Clock } from "lucide-astro";

const updates = await getCollection("updates");
updates.sort((a, b) => b.data.dateTime.getTime() - a.data.dateTime.getTime());
---

<HtmlLayout
  title="Archive"
  description="A list of past updates and announcements from us."
>
  <Header />

  <main class="mx-auto max-w-content space-y-10 px-4 pb-16 pt-32 sm:pt-24 lg:pt-28">
    <section class="space-y-4">
      <div
        class="flex flex-col items-center justify-center gap-3 sm:flex-row sm:items-end sm:justify-start"
      >
        <div
          class="flex size-11 items-center justify-center rounded-full bg-up-6"
          aria-hidden="true"
        >
          <Archive class="stroke-up-3" />
        </div>
        <h2 class="flex text-5xl font-medium">Archive</h2>
      </div>

      <p class="text-pretty text-center sm:text-left">
        Here lives all the messages, updates, and announcements we've ever posted on our website.
        This list does not represent <em>everything</em> that's going on though. Our Instagram and Discord
        are much more up to date!
      </p>
    </section>

    <section class="space-y-5">
      {
        updates.map(async (update) => {
          const { Content } = await update.render();
          const { dateTime } = update.data;

          return (
            <>
              <div class="space-y-2.5 rounded-lg bg-up-6 p-2.5">
                <div class="border-b border-up-5">
                  <Content />
                </div>

                <div class="flex gap-2">
                  <div class="flex items-center gap-2">
                    <CalendarFold
                      class="stroke-up-2"
                      size={16}
                    />
                    <time
                      class="col-span-1 font-mono text-sm text-up-2"
                      datetime={dateTime.toISOString()}
                    >
                      {dateTime.toLocaleDateString("en-US", {
                        month: "short",
                        day: "numeric",
                        year: "numeric",
                      })}
                    </time>
                  </div>

                  <div class="flex items-center gap-2">
                    <Clock
                      class="stroke-up-2"
                      size={16}
                    />
                    <time
                      class="col-span-1 font-mono text-sm text-up-2"
                      datetime={dateTime.toISOString()}
                    >
                      {dateTime.toLocaleTimeString("en-US", {
                        hour: "numeric",
                        minute: "numeric",
                      })}
                    </time>
                  </div>
                </div>
              </div>
            </>
          );
        })
      }
    </section>
  </main>

  <Footer />
</HtmlLayout>
