---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import Footer from "@/layouts/footer.astro";
import Header from "@/layouts/header.astro";
import HtmlLayout from "@/layouts/html-layout.astro";
import Link from "@/components/link.astro";
import CustomContent from "@/components/mdx/custom-content.astro";

const events = await getCollection("events");
events.sort((a, b) => b.data.dateTime.getTime() - a.data.dateTime.getTime());

const today = new Date();
const upcoming: CollectionEntry<"events">[] = [];
const archive: CollectionEntry<"events">[] = [];

events.forEach((event) => {
  const { dateTime } = event.data;

  if (dateTime.getTime() - today.getTime() > 0) {
    upcoming.push(event);
  } else {
    archive.push(event);
  }
});
---

<HtmlLayout description="See all our upcoming events and catch up on previous ones." title="Events">
  <Header />

  <main class="mx-auto mb-24 max-w-content space-y-10 px-4 pt-32 sm:space-y-16 sm:pt-28">
    <section class="space-y-6">
      <h2 class="text-30 font-medium leading-none sm:text-48">What's happening?!</h2>
      <p class="text-pretty leading-tight sm:text-24">
        See all our upcoming events and catch up on previous ones. Subscribe to <Link
          href="https://calendar.google.com/calendar/u/2?cid=ZDljMGI1ZDg0MmI2YTk0ZTdhYWM4ZTE4Njg4N2I3MGY5MWEyOTBlY2JjZmJiMjRkMWEyMjc2MGFjMjNjMWExN0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t"
          target="_blank"
          className="text-up-3 hover:text-up-4">our Google Calendar</Link
        > so you'll never miss out!
      </p>

      <p class="rounded-2xl bg-up-11 p-4">
        <span class="font-bold">⚠️ Under construction!</span>
        Please bear with us as we get more of previous events and related resources up on this page.
        For now, you can find them scattered throughout our <Link
          href="https://instagram.com/pennupgrade"
          target="_blank"
          className="text-up-3 hover:text-up-4">Instagram page</Link
        > and <Link
          href="https://discord.gg/vrhDM7NHph"
          target="_blank"
          className="text-up-3 hover:text-up-4">Discord server</Link
        >.
      </p>
    </section>

    {
      upcoming.length > 0 ? (
        <section class="space-y-6">
          <h3 class="text-24 font-medium leading-none sm:text-30">
            Upcoming event{upcoming.length > 1 ? "s" : ""}
          </h3>

          <ul class="space-y-4">
            {upcoming.map(async (event) => {
              const { Content } = await event.render();
              const {
                data: { name, dateTime },
              } = event;

              return (
                <li class="flex flex-col gap-4 rounded-2xl bg-up-11 p-4 sm:flex-row sm:gap-8">
                  <div class="flex flex-shrink-0 flex-col gap-1 sm:w-1/3">
                    <time
                      datetime={dateTime.toISOString()}
                      class="font-mono leading-snug text-up-4"
                    >
                      {`${dateTime.toLocaleDateString("en-US", {
                        weekday: "long",
                        timeZone: "EST",
                      })},`}
                      {dateTime.toLocaleDateString("en-US", {
                        month: "numeric",
                        day: "numeric",
                        timeZone: "EST",
                      })}

                      <span class="whitespace-nowrap">
                        @{" "}
                        {dateTime.toLocaleTimeString("en-US", {
                          hour: "numeric",
                          minute: "numeric",
                          timeZone: "EST",
                        })}
                      </span>
                    </time>

                    <span class="text-24 font-medium leading-none text-up-2">{name}</span>
                  </div>

                  <article class="space-y-4">
                    <CustomContent entryContent={Content} />
                  </article>
                </li>
              );
            })}
          </ul>
        </section>
      ) : (
        <p class="rounded-2xl bg-up-11 p-4 text-center italic text-up-7">No upcoming events!</p>
      )
    }

    <section class="space-y-6">
      <h3 class="text-24 font-medium leading-none sm:text-30">Archive</h3>
      <ul class="space-y-4">
        {
          archive.map(async (event) => {
            const { Content } = await event.render();
            const {
              data: { name, dateTime },
            } = event;

            return (
              <li class="flex flex-col gap-4 rounded-2xl bg-up-11 p-4 sm:flex-row sm:gap-8">
                <div class="flex flex-shrink-0 flex-col gap-1 sm:w-1/3">
                  <time datetime={dateTime.toISOString()} class="font-mono leading-snug text-up-4">
                    {dateTime.toLocaleDateString("en-US", {
                      month: "short",
                      day: "numeric",
                      year: "numeric",
                      timeZone: "EST",
                    })}
                  </time>

                  <span class="text-24 font-medium leading-none text-up-2">{name}</span>
                </div>

                <article class="space-y-4">
                  <CustomContent entryContent={Content} />
                </article>
              </li>
            );
          })
        }
      </ul>
    </section>
  </main>

  <Footer />
</HtmlLayout>
